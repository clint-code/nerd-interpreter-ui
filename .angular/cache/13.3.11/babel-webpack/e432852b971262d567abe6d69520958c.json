{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport $ from 'jquery';\nimport * as i0 from \"@angular/core\";\nexport let PreloaderComponent = /*#__PURE__*/(() => {\n  class PreloaderComponent {\n    constructor() {\n      this.images = [];\n      this.siteLoaded = new EventEmitter();\n      this.siteImages = [];\n      this.percentageLoaded = 0;\n    }\n\n    ngOnInit() {\n      this.imagesLoaded = 0;\n      this.siteImages = this.images;\n      this.totalImages = this.siteImages.length;\n\n      if (this.totalImages > 0) {\n        this.loadImages(this.siteImages);\n      }\n    }\n\n    loadImages(images) {\n      for (let i = 0; i < this.totalImages; i++) {\n        const image = new Image();\n        image.addEventListener(\"load\", event => {\n          this.imageLoaded(event);\n        }, false);\n        image.src = this.siteImages[i];\n      }\n    }\n\n    imageLoaded(event) {\n      this.imagesLoaded++;\n      this.percentageLoaded = Math.round(this.imagesLoaded / this.totalImages * 100);\n\n      if (this.imagesLoaded == this.totalImages) {\n        // setTimeout(()=>{      }, 2000);\n        this.loadComplete();\n      }\n    }\n\n    loadComplete() {\n      this.siteLoaded.emit(true);\n      $(\".preloader\").fadeOut();\n    }\n\n  }\n\n  PreloaderComponent.ɵfac = function PreloaderComponent_Factory(t) {\n    return new (t || PreloaderComponent)();\n  };\n\n  PreloaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PreloaderComponent,\n    selectors: [[\"app-preloader\"]],\n    inputs: {\n      percentage: \"percentage\",\n      images: \"images\"\n    },\n    outputs: {\n      siteLoaded: \"siteLoaded\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"preloader\"], [1, \"loaderContent\"], [\"src\", \"../../../assets/img/pre-loader.gif\", \"alt\", \"preloader\"]],\n    template: function PreloaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementStart(3, \"h3\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Loading \", ctx.percentageLoaded, \"%\");\n      }\n    },\n    styles: [\"\"]\n  });\n  return PreloaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}